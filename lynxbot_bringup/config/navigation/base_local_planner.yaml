recovery_behaviour_enabled: true

TrajectoryPlannerROS:
  # Robot Configuration Parameters
  acc_lim_x: 0.5
  acc_lim_theta:  0.5

  max_vel_x: 0.15
  min_vel_x: 0.08

  max_vel_theta: 0.15
  min_vel_theta: -0.15
  max_in_place_vel_theta: 0.15
  min_in_place_vel_theta: 0.08
  holonomic_robot: false
  escape_vel: -0.3

  # Goal Tolerance Parameters
  yaw_goal_tolerance: 0.2
  xy_goal_tolerance: 0.2
  latch_xy_goal_tolerance: true

  # Forward Simulation Parameters
  sim_time: 2.5
  sim_granularity: 0.02
  angular_sim_granularity: 0.02
  vx_samples: 10
  vtheta_samples: 20
  controller_frequency: 20.0

  # Trajectory scoring parameters
  meter_scoring: true # Whether the gdist_scale and pdist_scale parameters should assume that goal_distance and path_distance are expressed in units of meters or cells. Cells are assumed by default (false).
  occdist_scale: 0.4 #The weighting for how much the controller should attempt to avoid obstacles. default 0.01
  pdist_scale: 0.9  #     The weighting for how much the controller should stay close to the path it was given . default 0.6
  gdist_scale: 0.9 #     The weighting for how much the controller should attempt to reach its local goal, also controls speed  default 0.8

  heading_lookahead: 0.2  #How far to look ahead in meters when scoring different in-place-rotation trajectories
  heading_scoring: false  #Whether to score based on the robot's heading to the path or its distance from the path. default false
  heading_scoring_timestep: 0.4   #How far to look ahead in time in seconds along the simulated trajectory when using heading scoring
  dwa: false #Whether to use the Dynamic Window Approach (DWA)_ or whether to use Trajectory Rollout
  simple_attractor: false
  publish_cost_grid_pc: true  

  # Oscillation Prevention Parameters
  oscillation_reset_dist: 0.05 #How far the robot must travel in meters before oscillation flags are reset (double, default: 0.05)
  escape_reset_dist: 0.2
  escape_reset_theta: 0.2




DWAPlannerROS:
  # Robot configuration parameters
  acc_lim_x: 0.5
  acc_lim_y: 0
  acc_lim_th: 0.3

  max_vel_x: 0.6
  min_vel_x: 0
  max_vel_y: 0
  min_vel_y: 0

  max_vel_trans: 0.13 #0.13
  min_vel_trans: 0.04 #0.09
  max_vel_theta: 0.13 #0.13
  min_vel_theta: 0.04 #0.09

  # Goal Tolerance Parameters
  yaw_goal_tolerance: 0.2
  xy_goal_tolerance: 0.22
  latch_xy_goal_tolerance: true

  # # Forward Simulation Parameters
  sim_time: 1.2
  sim_granularity: 0.02
  vx_samples: 11
  vy_samples: 0
  vtheta_samples: 30
  penalize_negative_x: false
  controller_frequency: 30.0
  # # Trajectory scoring parameters
  path_distance_bias: 40 #32 # The weighting for how much the controller should stay close to the path it was given
  goal_distance_bias: 32 #24.0 # The weighting for how much the controller should attempt to reach its local goal, also controls speed
  occdist_scale: 0.2 # The weighting for how much the controller should attempt to avoid obstacles
  forward_point_distance: 0.225 #0.325 # The distance from the center point of the robot to place an additional scoring point, in meters
  stop_time_buffer: 0.2  # The amount of time that the robot must stThe absolute value of the veolicty at which to start scaling the robot's footprint, in m/sop before a collision in order for a trajectory to be considered valid in seconds
  scaling_speed: 0.2 # The absolute value of the velocity at which to start scaling the robot's footprint, in m/s
  max_scaling_factor: 0.2 # The maximum factor to scale the robot's footprint by

  # # Oscillation Prevention Parameters
  oscillation_reset_dist: 0.05 #How far the robot must travel in meters before oscillation flags are reset (double, default: 0.05)


TebLocalPlannerROS:

 odom_topic: odom

 exact_arc_length: false

 # Trajectory

 teb_autosize: True
 dt_ref: 0.3
 dt_hysteresis: 0.1
 global_plan_overwrite_orientation: True
 allow_init_with_backwards_motion: True
 max_global_plan_lookahead_dist: 2.0
 feasibility_check_no_poses: 7

 # Robot

 max_vel_x: 0.23
 max_vel_x_backwards: 0.2
 max_vel_y: 0.0
 max_vel_theta: 0.23
 acc_lim_x: 0.5
 acc_lim_theta: 0.5
 min_turning_radius: 0.0 # diff-drive robot (can turn on place!)

 footprint_model:
   type: "point"

 # GoalTolerance

 xy_goal_tolerance: 0.2
 yaw_goal_tolerance: 0.1
 free_goal_vel: False

 # Obstacles

 min_obstacle_dist: 0.45 # This value must also include our robot radius, since footprint_model is set to "point".
 include_costmap_obstacles: True
 costmap_obstacles_behind_robot_dist: 1.5
 obstacle_poses_affected: 30
 costmap_converter_plugin: ""
 costmap_converter_spin_thread: True
 costmap_converter_rate: 5
 costmap_obstacles_behind_robot_dist: 0.2
 # Optimization

 no_inner_iterations: 5
 no_outer_iterations: 4
 optimization_activate: True
 optimization_verbose: False
 penalty_epsilon: 0.1
 weight_max_vel_x: 2
 weight_max_vel_theta: 1
 weight_acc_lim_x: 1
 weight_acc_lim_theta: 1
 weight_kinematics_nh: 1000
 weight_kinematics_forward_drive: 1
 weight_kinematics_turning_radius: 1
 weight_optimaltime: 1
 weight_obstacle: 75
 weight_dynamic_obstacle: 10 # not in use yet
 weight_adapt_factor: 2

 # Homotopy Class Planner

 enable_homotopy_class_planning: True
 enable_multithreading: True
 simple_exploration: False
 max_number_classes: 4
 selection_cost_hysteresis: 1.0
 selection_obst_cost_scale: 1.0
 selection_alternative_time_cost: False

 roadmap_graph_no_samples: 15
 roadmap_graph_area_width: 5
 h_signature_prescaler: 0.5
 h_signature_threshold: 0.1
 obstacle_keypoint_offset: 0.1
 obstacle_heading_threshold: 0.45
 visualize_hc_graph: False

